<project name="build-RIM">

    <!-- ################################################################## -->
    <!-- ####################   RIM build section    ###################### -->
    <!-- ################################################################## -->
    <taskdef resource="bb-ant-defs.xml" classpath="ant/lib/bb-ant-tools.jar" />

	<taskdef resource="proguard/ant/task.properties" classpath="ant/lib/proguard.jar" />

    <property name="build.dir" location="build-RIM" />

	<!--The profile properties -->
    <property file="profile.properties" />
    <property file="ant/profiles/${currentRim.profile}.properties" />

    <path id="src.files">
        <fileset dir="${build.dir}/src" includes="**/*" />
        <fileset dir="res" includes="**/*" />
    </path>

    <target name="preprocess-RIM">
        <mkdir dir="${build.dir}/src"/>
        <echo message="Preprocessing: ${preprocessor.symbols}"/>
        <wtkpreprocess srcdir="src" destdir="${build.dir}/src" printsymbols="false" symbols="${preprocessor.symbols}" device="" verbose="false"/>   
    </target>

    <!-- Build as a RIM MIDlet application -->
    <target name="build-RIM-MIDlet" depends="clean-RIM,preprocess-RIM" description="build RIM MIDlet">
        <!-- compile rim project as midlet -->
        <rapc verbose="false" quiet="true" output="${app.name}" destdir="${build.dir}">
            <src refid="src.files" />
            <jdp
                type="midlet"
                midletclass="memoplayer.MiniPlayer"
                title="MemoPlayer"
                icon="icon.png"
                version="${version}"
                vendor="Orange">
            </jdp>
        </rapc>
        <mkdir dir="${pkg.dir}/midlet" />
        <copy todir="${pkg.dir}/midlet">
            <fileset dir="${build.dir}/" includes="${app.name}.cod,${app.name}.jad,${app.name}.jar" />
        </copy>
    </target>

    <!-- Build as a RIM CLDC application -->
    <target name="build-RIM-CLDC" depends="clean-RIM,preprocess-RIM" description="build RIM-CLDC">
        <!-- copy resources tor build dir -->
        <copy todir="${build.dir}/src" overwrite="true">
            <fileset dir="${basedir}/res" includes="*.*"/>
        </copy>
        <path id="srcCLDC.files">
            <fileset dir="${build.dir}/src" includes="**/*" />
        </path>
        <!-- compile rim project as CLDC -->
        <rapc verbose="false" quiet="true" output="${app.name}" destdir="${build.dir}" import="libsk_obf.jar">
            <src refid="srcCLDC.files" />
            <jdp file="${basedir}/profile-BB.properties" />
        </rapc>
        <!-- sign application if specified -->
        <if>
            <equals arg1="${sign-rim}" arg2="true" />
            <then>
                <if>
                    <isset property="sigtool.password" />
                    <then>
                    	<sigtool password="${sigtool.password}" codfile="${build.dir}/${app.name}.cod"/>
                    </then>
                    <else>
                    	<echo level="error" message="${build.dir}/${app.name}.cod is not signed, no password specified" />
                    </else>
                </if>
            </then>
        </if>
        <!-- make package target directory -->
        <mkdir dir="${pkg.dir}/alx" />
        <mkdir dir="${pkg.dir}/jad" />
        <!-- copy cod file to alx directory -->
        <copy todir="${pkg.dir}/alx">
            <fileset dir="${build.dir}/" includes="${app.name}.cod" />
        </copy>
        <!-- generate alx file to load with Desktop Manager -->
        <alx destdir="${pkg.dir}/alx" filename="${app.name}.alx">
            <application 
                id="${app.name}"
                name="${app.name}"
                vendor="Orange"
                description="MemoPlayer"
                version="${version}">
                <codset>
                   <fileset dir="${pkg.dir}" includes="*.cod" />
                </codset>
            </application> 
        </alx>
        <!-- copy jad file to jad directory -->
        <copy todir="${pkg.dir}/jad">
            <fileset dir="${build.dir}/" includes="${app.name}.jad" />
        </copy>
        <!-- modify jad file to remove MIDlet-Jar-Size and MIDlet-Jar-URL for OTA -->
        <wtkjad jadfile="${pkg.dir}/jad/${app.name}.jad" update="true">
            <attribute name="MIDlet-Jar-Size"/>
            <attribute name="MIDlet-Jar-URL"/>
        </wtkjad>
        <!-- unzip cod file to jad directory for OTA deployment -->
        <unzip src="${pkg.dir}/alx/${app.name}.cod" dest="${pkg.dir}/jad"/>
    </target>

    <!-- Build as a RIM library -->
    <target name="build-RIM-LIB" depends="preprocess-RIM" description="Build RIM memoplayer library">
        <path id="srcCLDC.files">
            <fileset dir="${build.dir}/src" includes="**/*" />
        </path>
        <!-- compile rim project -->
        <rapc verbose="false" quiet="true" output="${rim-libname}" destdir="${build.dir}">
            <src refid="srcCLDC.files" />
            <jdp
                type="library"
                title="MemoPlayer"
                vendor="Orange"
                version="${libversion}"
                description="MemoPlayer RIM library"
            />
        </rapc>
        <!-- sign library if specified -->
        <if>
            <equals arg1="${sign-rim}" arg2="true" />
            <then>
                <if>
                    <isset property="sigtool.password" />
                    <then>
                        <sigtool password="${sigtool.password}" codfile="${build.dir}/${rim-libname}.cod"/>
                    </then>
                    <else>
                        <echo level="error" message="${build.dir}/${rim-libname}.cod is not signed, no password specified" />
                    </else>
                </if>
            </then>
        </if>
        <!-- copy files to build lib directory -->
        <copy todir="${build.dir}/lib">
            <fileset dir="${build.dir}/" includes="${rim-libname}.cod,${rim-libname}.jad,${rim-libname}.jar" />
        </copy>
    </target>

    <!-- Build a jar library file -->
    <target name="build-MemoRIM-LIB" depends="preprocess-RIM">
        <!-- compile rim project -->
        <mkdir dir="${build.dir}/classes" />
        <javac 
        	srcdir="${build.dir}/src" 
        	classpath="${jde.home}/lib/net_rim_api.jar" 
        	destdir="${build.dir}/classes"
        	source="1.3"
        	target="1.3"
        />
    	
        <!-- Default name for the MIDlet is the profile's name -->
        <property name="MemoRimLibName" value="${currentRim.profile}_${jde.ver}.jar" />

        <zip destfile="${build.dir}/${MemoRimLibName}">
            <zipfileset dir="${build.dir}/classes" includes="**/*.class"/>
        </zip>
        <condition property="do.obfuscate" value="true">
            <isTrue value="${obfuscate}"/>
        </condition>
    	<echo message="currentRim.profile: ${currentRim.profile}" />
    	<antcall target="obfuscateRim" />
        <!-- Preverify lib -->
    	<exec executable="${wtk.home}/bin/preverify">
            <arg value="-d"/>
            <arg value="pkg/rim"/>
            <arg value="-classpath"/>
            <arg value="${jde.home}/lib/net_rim_api.jar"/>
            <arg value="${build.dir}/${MemoRimLibName}"/>
        </exec>
    </target>

    <target name="obfuscateRim" if="do.obfuscate">
    	<copy file="${build.dir}/${MemoRimLibName}" tofile="${build.dir}/obf_${MemoRimLibName}" />
        <proguard obfuscate="true" skipnonpubliclibraryclasses="false" usemixedcaseclassnames="false" optimizationpasses="3">
            <libraryjar path="${jde.home}/lib/net_rim_api.jar" />
            <injar path="${build.dir}/obf_${MemoRimLibName}" />
            <outjar path="${build.dir}/${MemoRimLibName}" />
            <keep name="memoplayer.MiniPlayer" />
        </proguard>
        <delete file="${build.dir}/obf_${MemoRimLibName}" />
    </target>

    <target name="clean-RIM" description="Clean RIM build files">
        <delete dir="${build.dir}" />
    </target>

    <target name="Package-RIM-LIB-toSDK">
        <echo message="Packaging: ${currentRim.profile} ..." />
        <antcall target="clean-RIM"/>
        <property file="profile.properties" />
        <property file="ant/profiles/${currentRim.profile}.properties" />
        <antcall target="build-MemoRIM-LIB"/>
        <echo message="Packaged: ${currentRim.profile}" />
    </target>

    	
	<target name="iter-on-rim-profiles">
        <foreach list="${rimProfiles}" param="currentRim.profile" target="Package-RIM-LIB-toSDK" inheritall="false" />
    </target>

   <target name="PackageRIM" description="Build all the RIM profiles and put them in the SDK">
        <property name="rimProfiles" value="${profilesForRelease-RIM}"/>
        <delete dir="${pkg.dir}/rim" />
        <call target="Package-RIM-LIB-toSDK" iterations="iter-on-rim-profiles" />
	</target>

	<target name="PackageRIM.ToSDK" description="Build all the RIM profiles and put them in the SDK">
		<property name="rimProfiles" value="${profilesForSDK-RIM}"/>
		<delete dir="${pkg.dir}/rim" />
        <call target="Package-RIM-LIB-toSDK" iterations="iter-on-rim-profiles" />
        <copy todir="${sdkrim.dir}" overwrite="true">
            <fileset dir="${pkg.dir}/rim" includes="**/*.jar" />
        </copy>
	</target>

</project>
